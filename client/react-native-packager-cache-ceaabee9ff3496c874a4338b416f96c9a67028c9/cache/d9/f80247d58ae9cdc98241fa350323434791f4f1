Object.defineProperty(exports,"__esModule",{value:true});















var _BaseView=require("./BaseView");var _BaseView2=babelHelpers.interopRequireDefault(_BaseView);
var _merge=require("../Utils/merge");var _merge2=babelHelpers.interopRequireDefault(_merge);
var _ovrui=require("ovrui");var OVRUI=babelHelpers.interopRequireWildcard(_ovrui);var

RCTScene=function(_RCTBaseView){babelHelpers.inherits(RCTScene,_RCTBaseView);
/**
   * constructor: allocates the required resources and sets defaults
   */
function RCTScene(guiSys){babelHelpers.classCallCheck(this,RCTScene);var _this=babelHelpers.possibleConstructorReturn(this,(RCTScene.__proto__||Object.getPrototypeOf(RCTScene)).call(this));

_this.view=new OVRUI.UIView(guiSys);return _this;
}

/**
   * override the handling of the transform to become a no op
   */babelHelpers.createClass(RCTScene,[{key:"presentLayout",value:function presentLayout()
{}

/**
   * Describes the properties representable by this view type and merges
   * with super type
   */}],[{key:"describe",value:function describe()
{
return(0,_merge2.default)(babelHelpers.get(RCTScene.__proto__||Object.getPrototypeOf(RCTScene),"describe",this).call(this),{});
}}]);return RCTScene;}(_BaseView2.default);/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *//**
 * Defines RCTScene "derived" from RTCBaseView.
 * Assigns 'this.view' to OVRUI.UIView(guiSys),
 * @class RCTScene
 * @extends RCTBaseView
 */exports.default=RCTScene;