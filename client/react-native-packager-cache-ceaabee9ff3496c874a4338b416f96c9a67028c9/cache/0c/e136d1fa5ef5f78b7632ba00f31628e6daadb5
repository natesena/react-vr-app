/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SpotLight
 */
'use strict';

var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('prop-types');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');
var StyleSheetPropType=require('StyleSheetPropType');
var LayoutAndTransformColorPropTypes=require('LayoutAndTransformColorPropTypes');

var createReactClass=require('create-react-class');
var requireNativeComponent=require('requireNativeComponent');

/**
 * Light originates from a single point, and spreads outward in a cone.
 *
 * Representation of
 * https://threejs.org/docs/index.html#api/lights/SpotLight
 */
var SpotLight=createReactClass({displayName:"SpotLight",
mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{
style:StyleSheetPropType(LayoutAndTransformColorPropTypes),

/**
     * In "physically correct" mode, the product of color * intensity is
     * interpreted as luminous intensity measured in candela.
     */
intensity:PropTypes.number,
/**
     * If non-zero, light attenuates linearly from maximum intensity at
     * light position down to zero at distance.
     */
distance:PropTypes.number,
/**
     * The amount the light dims along the distance of the light.
     * In "physically correct" mode, decay = 2 leads to physically realistic light falloff.
     */
decay:PropTypes.number,

/**
     * Maximum angle of light dispersion from its direction whose upper bound is Math.PI/2.
     */
angle:PropTypes.number,
/**
     * Percent of the spotlight cone that is attenuated due to penumbra. Takes
     * values between zero and 100. Default is zero.
     */
penumbra:PropTypes.number}),


viewConfig:{
uiViewClassName:'SpotLight',
validAttributes:babelHelpers.extends({},
ReactNativeViewAttributes.RCTView,{
intensity:true,
distance:true,
decay:true,
angle:true,
penumbra:true})},



getDefaultProps:function getDefaultProps(){
return{};
},

render:function render(){
var props=babelHelpers.extends({},this.props)||{};
props.style=props.style||{};
if(!props.style.position){
props.style.position='absolute';
}
return(
React.createElement(RKSpotLight,babelHelpers.extends({},
props,{
testID:this.props.testID,
onStartShouldSetResponder:function onStartShouldSetResponder(){return true;},
onResponderTerminationRequest:function onResponderTerminationRequest(){return false;}}),
this.props.children));


}});


var RKSpotLight=requireNativeComponent('SpotLight',SpotLight,{
nativeOnly:{}});


module.exports=SpotLight;