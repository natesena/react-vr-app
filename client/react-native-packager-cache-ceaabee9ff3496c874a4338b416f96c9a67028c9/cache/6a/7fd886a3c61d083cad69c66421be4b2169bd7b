Object.defineProperty(exports,"__esModule",{value:true});exports.default=










































createRootView;var _ReactNativeContext=require("./ReactNativeContext");var _WebWorkerBridge=require("./Bridge/WebWorkerBridge");var _WebWorkerBridge2=babelHelpers.interopRequireDefault(_WebWorkerBridge);/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */var DEVTOOLS_FLAG=/\bdevtools\b/;var HOTRELOAD_FLAG=/\bhotreload\b/;/**
 * Contains the majority of the boilerplate needed to initialize a React context
 */function createRootView(guisys,name){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!guisys){throw new Error('ReactVR Root View must attach to an OVRUI GUI!');}if(!name||typeof name!=='string'){throw new Error('ReactVR Root View must have a module name to mount');}
// If running in development mode, and the user has added ?devtools to the query
// string, attempt to connect to standalone React Devtools on localhost:8097
var enableDevTools=false;













var initialProps=options.initialProps||{};
var contextOptions={
isLowLatency:!!options.isLowLatency,
customViews:options.customViews};

if(options.assetRoot){
contextOptions.assetRoot=options.assetRoot;
}
if(HOTRELOAD_FLAG.test(location.search)){
contextOptions.enableHotReload=true;
}
if(options.enableHotReload){
contextOptions.enableHotReload=options.enableHotReload;
}

var bridge=
options.bridge||
new _WebWorkerBridge2.default({
enableDevTools:enableDevTools,
enableHotReload:contextOptions.enableHotReload});


var bundleURL=options.bundle||'../index.bundle?platform=vr';
// append the query param to make the RN packager wrap the components
if(contextOptions.enableHotReload){
bundleURL+='&hot=true';
}

var rn=new _ReactNativeContext.ReactNativeContext(guisys,bridge,contextOptions);
if(Array.isArray(options.nativeModules)){
for(var _iterator=options.nativeModules,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var module=_ref;
rn.registerModule(module);
}
}
rn.init(bundleURL);
var rootTag=rn.createRootView(name,initialProps);

return{
context:rn,
frame:function frame(camera){
rn.frame(camera,rootTag);
},
rootTag:rootTag};

}